#CONSTANT
RC = [
    0x0000000000000001,
    0x0000000000008082,
    0x800000000000808A,
    0x8000000080008000,
    0x000000000000808B,
    0x0000000080000001,
    0x8000000080008081,
    0x8000000000008009,
    0x000000000000008A,
    0x0000000000000088,
    0x0000000080008009,
    0x000000008000000A,
    0x000000008000808B,
    0x800000000000008B,
    0x8000000000008089,
    0x8000000000008003,
    0x8000000000008002,
    0x8000000000000080,
    0x000000000000800A,
    0x800000008000000A,
    0x8000000080008081,
    0x8000000000008080,
    0x0000000080000001,
    0x8000000080008008
]

def rot(W, r):
    return ((W >> (64 - (r % 64))) + (W << (r % 64))) % (1 << 64)

def round(A, RC):
    # θ step
    C = [A[x][0] ^ A[x][1] ^ A[x][2] ^ A[x][3] ^ A[x][4] for x in range(5)]
    D = [C[x-1] ^  rot(C[(x+1) % 5], 1) for x in range(5)]
    A = [[A[x][y] ^ D[x] for y in range(5)] for x in range(5)]

    # ρ dan π
    (x, y) = (1, 0)
    cur = A[x][y]
    for t in range(24):
        (x, y) = (y, (2*x + 3*y) % 5)
        cur = A[x][y]
        A[x][y] = rot(cur, (t+1)*(t+2)//2)

    # χ
    for y in range(5):
        B = [A[x][y] for x in range(5)]
        for x in range(5):
            A[x][y] = B[x] ^ ((~B[(x+1) % 5]) & B[(x+2) % 5])

    # ι
    A[0][0] = A[0][0] ^ RC